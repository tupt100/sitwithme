AWSTemplateFormatVersion: 2010-09-09

Parameters:
  env:
    Type: String
  stateMachineNamePrefix:
    Type: String
  functionsitwithmeAlarmArn:
    Type: String

Resources:
  AlarmStateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: !Sub ${stateMachineNamePrefix}-${env}-alarm
      RoleArn: !GetAtt AlarmStateMachineRole.Arn
      DefinitionSubstitutions:
        FunctionsitwithmeAlarmArn: !Ref functionsitwithmeAlarmArn
      DefinitionString: |-
        {
          "StartAt": "Wait for Timestamp",
          "States": {
            "Wait for Timestamp": {
              "Type": "Wait",
              "TimestampPath": "$.alarmDate",
              "Next": "Alarm"
            },

            "Alarm": {
              "Type": "Task",
              "Resource": "${FunctionsitwithmeAlarmArn}",
              "Retry": [
                {
                  "ErrorEquals": ["States.ALL"],
                  "IntervalSeconds": 1,
                  "MaxAttempts": 3,
                  "BackoffRate": 2
                }
              ],
              "End": true
            }
          }
        }


  AlarmStateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${stateMachineNamePrefix}-${env}-alarm
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ['states.amazonaws.com']
            Action: ["sts:AssumeRole"]


  AlarmStateMachinePolicy:
    DependsOn: [AlarmStateMachineRole]
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${stateMachineNamePrefix}-${env}-alarm
      Roles:
        - !Ref AlarmStateMachineRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - lambda:InvokeFunction
            Resource: !Ref functionsitwithmeAlarmArn

Outputs:
  AlarmStateMachineArn:
    Value: !Ref AlarmStateMachine

  AlarmStateMachineName:
    Value: !GetAtt AlarmStateMachine.Name
